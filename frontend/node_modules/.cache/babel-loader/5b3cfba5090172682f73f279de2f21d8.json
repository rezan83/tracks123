{"remainingRequest":"/home/rezan/Desktop/Projects/tracks/frontend/node_modules/babel-loader/lib/index.js!/home/rezan/Desktop/Projects/tracks/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/rezan/Desktop/Projects/tracks/frontend/src/helpers/index.js","dependencies":[{"path":"/home/rezan/Desktop/Projects/tracks/frontend/src/helpers/index.js","mtime":1610229779865},{"path":"/home/rezan/Desktop/Projects/tracks/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rezan/Desktop/Projects/tracks/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rezan/Desktop/Projects/tracks/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL3JlemFuL0Rlc2t0b3AvUHJvamVjdHMvdHJhY2tzL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8gZ3JvdXAgc2hpcG1lbnRzIGJhc2VkIG9uIHRoZSBjYXJyaWVyLgovLyB0aGlzIGlzIGRvbmUgb25seSBvbmNlIHdoZW4gZmV0Y2hpbmcgZGF0YQovLyAgYW5kIG1ha2UgcmVzdCBvZiBjYWxjdWxhdGlvbiBlYXNpZXIKZXhwb3J0IHZhciBfZ3JvdXBTaGlwbWVudHMgPSBmdW5jdGlvbiBfZ3JvdXBTaGlwbWVudHMoYXJyLCBncm91cEJ5KSB7CiAgcmV0dXJuIGFyci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgY3VyKSB7CiAgICB2YXIgcHJvcCA9IGN1cltncm91cEJ5XTsKCiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhY2MsIHByb3ApKSB7CiAgICAgIGFjY1twcm9wXSA9IFtdOwogICAgfQoKICAgIGlmICghYWNjW3Byb3BdLmluY2x1ZGVzKGN1cikpIHsKICAgICAgYWNjW3Byb3BdLnB1c2goY3VyKTsKICAgIH0KCiAgICByZXR1cm4gYWNjOwogIH0sIHt9KTsKfTsKCnZhciBpc0luVGltZSA9IGZ1bmN0aW9uIGlzSW5UaW1lKHRpbWUxLCB0aW1lMikgewogIHZhciB0aW1lU3RhbXAxID0gbmV3IERhdGUodGltZTEpOwogIHZhciB0aW1lU3RhbXAyID0gbmV3IERhdGUodGltZTIpOwogIHJldHVybiB0aW1lU3RhbXAxID49IHRpbWVTdGFtcDI7Cn07IC8vIGZpbHRlciBhcnJheSBleGNsdWRpbmcgdGhlIGl0ZW0gZXZlbiBpZiBvbmUgY3JpdGVyaWEgZG9lc24ndCBtYXRjaAoKCnZhciB1c2VyRmlsdGVycyA9IGZ1bmN0aW9uIHVzZXJGaWx0ZXJzKGFyciwgZmlsdGVycykgewogIHJldHVybiBhcnIuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICB2YXIgbWF0Y2hTdGFydFRpbWUgPSB0cnVlOwogICAgdmFyIG1hdGNoRW5kVGltZSA9IHRydWU7CiAgICB2YXIgbWF0Y2hTZWFyY2ggPSB0cnVlOwoKICAgIGZvciAodmFyIGtleSBpbiBmaWx0ZXJzKSB7CiAgICAgIGlmIChmaWx0ZXJzW2tleV0pIHsKICAgICAgICBpZiAoa2V5ID09PSAic3RhcnRfdGltZSIpIHsKICAgICAgICAgIG1hdGNoU3RhcnRUaW1lID0gaXNJblRpbWUoaXRlbVtrZXldLCBmaWx0ZXJzW2tleV0pOwogICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAiZW5kX3RpbWUiKSB7CiAgICAgICAgICBtYXRjaEVuZFRpbWUgPSBpc0luVGltZShmaWx0ZXJzW2tleV0sIGl0ZW1ba2V5XSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG1hdGNoU2VhcmNoID0gaXRlbVtrZXldICE9IHVuZGVmaW5lZCAmJiBpdGVtW2tleV0udG9Mb3dlckNhc2UoKSA9PT0gZmlsdGVyc1trZXldLnRvTG93ZXJDYXNlKCk7CiAgICAgICAgfQoKICAgICAgICBpZiAoIWl0ZW1ba2V5XSB8fCAhbWF0Y2hTdGFydFRpbWUgfHwgIW1hdGNoRW5kVGltZSB8fCAhbWF0Y2hTZWFyY2gpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gdHJ1ZTsKICB9KTsKfTsgLy8gYXBwbHlpbmcgZmlsdGVyIGZ1bmN0aW9uIG9uIHRoZSBncm91cGVkIGRhdGEKCgpleHBvcnQgdmFyIF9maWx0ZXJHcm91cGVkID0gZnVuY3Rpb24gX2ZpbHRlckdyb3VwZWQoZ3JvdXBlZCwgZmlsdGVycykgewogIHZhciBmaWx0ZXJlZEdyb3VwZWQgPSB7fTsKCiAgZm9yICh2YXIga2V5IGluIGdyb3VwZWQpIHsKICAgIGZpbHRlcmVkR3JvdXBlZFtrZXldID0gdXNlckZpbHRlcnMoZ3JvdXBlZFtrZXldLCBmaWx0ZXJzKTsKICB9CgogIHJldHVybiBmaWx0ZXJlZEdyb3VwZWQ7Cn07IC8vIGZvcm1hdGluZyByZXF1aXJlZCBpbmZvIGZyb20gZmlsdGVyZWQgZGF0YQoKdmFyIGdhdGhlckNhcnJpZXJEYXRhID0gZnVuY3Rpb24gZ2F0aGVyQ2FycmllckRhdGEoYXJyKSB7CiAgdmFyIGluaXRpYWxDYXJyaWVyRGF0YSA9IHsKICAgIHRvdGFsX2NvMl9lbWl0dGVkOiAwLAogICAgdHJhdmVsbGVkX2Rpc3RhbmNlOiAwLAogICAgd2VpZ2h0OiAwLAogICAgZnVlbF9jb25zdW1lZDogMCwKICAgIGludGVuY2l0eTogMCwKICAgIHNoaXBtZW50czogYXJyLmxlbmd0aAogIH07CiAgcmV0dXJuIGFyci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgY3VyKSB7CiAgICBhY2MudG90YWxfY28yX2VtaXR0ZWQgKz0gY3VyLnRvdGFsX2NvMl9lbWl0dGVkOwogICAgYWNjLnRyYXZlbGxlZF9kaXN0YW5jZSArPSBjdXIudHJhdmVsbGVkX2Rpc3RhbmNlOwogICAgYWNjLmZ1ZWxfY29uc3VtZWQgKz0gY3VyLmZ1ZWxfY29uc3VtZWQ7CiAgICBhY2Mud2VpZ2h0ICs9IGN1ci53ZWlnaHQ7CiAgICBhY2MuaW50ZW5jaXR5ICs9IGN1ci50b3RhbF9jbzJfZW1pdHRlZCAvIGN1ci53ZWlnaHQgLyBjdXIudHJhdmVsbGVkX2Rpc3RhbmNlOwogICAgcmV0dXJuIGFjYzsKICB9LCBpbml0aWFsQ2FycmllckRhdGEpOwp9OyAvLyBhZGRpbmcgZmluYWwgaWZvcyBsaWtlIGludGVuY2l0eQoKCmV4cG9ydCB2YXIgX3ByZXBhcmVDYXJyaWVyRGF0YSA9IGZ1bmN0aW9uIF9wcmVwYXJlQ2FycmllckRhdGEoZ3JvdXBlZCkgewogIHZhciBjYXJyaWVyRGF0YSA9IF9vYmplY3RTcHJlYWQoe30sIGdyb3VwZWQpOwoKICBmb3IgKHZhciBrZXkgaW4gY2FycmllckRhdGEpIHsKICAgIGNhcnJpZXJEYXRhW2tleV0gPSBnYXRoZXJDYXJyaWVyRGF0YShjYXJyaWVyRGF0YVtrZXldKTsKICAgIGNhcnJpZXJEYXRhW2tleV0uY2Fycmllcl9jb21wYW55X2lkID0ga2V5OwogICAgY2FycmllckRhdGFba2V5XS5hdl93ZWlnaHQgPSBjYXJyaWVyRGF0YVtrZXldLndlaWdodCAvIGNhcnJpZXJEYXRhW2tleV0uc2hpcG1lbnRzOwogICAgY2FycmllckRhdGFba2V5XS5pbnRlbmNpdHlfZmFjdG9yID0gY2FycmllckRhdGFba2V5XS5pbnRlbmNpdHkgLyBjYXJyaWVyRGF0YVtrZXldLnNoaXBtZW50cyAqIDEwMDA7CiAgfQoKICBjb25zb2xlLmxvZyhjYXJyaWVyRGF0YSk7CiAgcmV0dXJuIGNhcnJpZXJEYXRhOwp9OyAvLyBqdXN0IHJldHVybmluZyBkZWZhdWx0IHN0YXJ0IGFuZCBlbmQgdGltZQoKZXhwb3J0IHZhciBfZGVmYXVsdFRpbWVzID0gZnVuY3Rpb24gX2RlZmF1bHRUaW1lcygpIHsKICB2YXIgbGFzdFRlbldlZWtzID0gNzA7CiAgdmFyIGxhc3RTaGlwbWVudCA9ICIyMDIwLTEwLTI4IjsKICB2YXIgZGVmYXVsdFN0YXJ0ID0gbmV3IERhdGUobGFzdFNoaXBtZW50KTsKICBkZWZhdWx0U3RhcnQuc2V0RGF0ZShkZWZhdWx0U3RhcnQuZ2V0RGF0ZSgpIC0gbGFzdFRlbldlZWtzKTsKICBkZWZhdWx0U3RhcnQgPSBkZWZhdWx0U3RhcnQudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCk7CiAgdmFyIGRlZmF1bHRFbmQgPSBuZXcgRGF0ZSgpOwogIGRlZmF1bHRFbmQgPSBkZWZhdWx0RW5kLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApOwogIHJldHVybiB7CiAgICBkZWZhdWx0U3RhcnQ6IGRlZmF1bHRTdGFydCwKICAgIGRlZmF1bHRFbmQ6IGRlZmF1bHRFbmQKICB9Owp9Ow=="},{"version":3,"sources":["/home/rezan/Desktop/Projects/tracks/frontend/src/helpers/index.js"],"names":["_groupShipments","arr","groupBy","reduce","acc","cur","prop","Object","prototype","hasOwnProperty","call","includes","push","isInTime","time1","time2","timeStamp1","Date","timeStamp2","userFilters","filters","filter","item","matchStartTime","matchEndTime","matchSearch","key","undefined","toLowerCase","_filterGrouped","grouped","filteredGrouped","gatherCarrierData","initialCarrierData","total_co2_emitted","travelled_distance","weight","fuel_consumed","intencity","shipments","length","_prepareCarrierData","carrierData","carrier_company_id","av_weight","intencity_factor","console","log","_defaultTimes","lastTenWeeks","lastShipment","defaultStart","setDate","getDate","toISOString","slice","defaultEnd"],"mappings":"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","sourcesContent":["// group shipments based on the carrier.\n// this is done only once when fetching data\n//  and make rest of calculation easier\nexport const _groupShipments = (arr, groupBy) => {\n  return arr.reduce((acc, cur) => {\n    let prop = cur[groupBy];\n    if (!Object.prototype.hasOwnProperty.call(acc, prop)) {\n      acc[prop] = [];\n    }\n    if (!acc[prop].includes(cur)) {\n      acc[prop].push(cur);\n    }\n    return acc;\n  }, {});\n};\n\nconst isInTime = (time1, time2) => {\n  let timeStamp1 = new Date(time1);\n  let timeStamp2 = new Date(time2);\n  return timeStamp1 >= timeStamp2;\n};\n\n// filter array excluding the item even if one criteria doesn't match\nconst userFilters = (arr, filters) => {\n  return arr.filter((item) => {\n    let matchStartTime = true;\n    let matchEndTime = true;\n    let matchSearch = true;\n    for (let key in filters) {\n      if (filters[key]) {\n        if (key === \"start_time\") {\n          matchStartTime = isInTime(item[key], filters[key]);\n        } else if (key === \"end_time\") {\n          matchEndTime = isInTime(filters[key], item[key]);\n        }\n        else {\n          matchSearch =\n            (item[key] != undefined) && (item[key].toLowerCase() === filters[key].toLowerCase());\n        }\n          if(!item[key] || !matchStartTime || !matchEndTime || !matchSearch){\n              return false\n          }\n      }\n    }\n    return true;\n  });\n};\n\n// applying filter function on the grouped data\nexport const _filterGrouped = (grouped, filters) => {\n  let filteredGrouped = {};\n  for (const key in grouped) {\n    filteredGrouped[key] = userFilters(grouped[key], filters);\n  }\n  return filteredGrouped;\n};\n\n// formating required info from filtered data\nconst gatherCarrierData = (arr) => {\n  let initialCarrierData = {\n    total_co2_emitted: 0,\n    travelled_distance: 0,\n    weight: 0,\n    fuel_consumed: 0,\n    intencity: 0,\n    shipments: arr.length,\n  };\n  return arr.reduce((acc, cur) => {\n    \n    acc.total_co2_emitted += cur.total_co2_emitted;\n    acc.travelled_distance += cur.travelled_distance;\n    acc.fuel_consumed += cur.fuel_consumed;\n    acc.weight += cur.weight;\n    acc.intencity += \n      cur.total_co2_emitted / cur.weight / cur.travelled_distance;\n    return acc;\n  }, initialCarrierData);\n};\n\n// adding final ifos like intencity\nexport const _prepareCarrierData = (grouped) => {\n  let carrierData = { ...grouped };\n  for (let key in carrierData) {\n    carrierData[key] = gatherCarrierData(carrierData[key]);\n    carrierData[key].carrier_company_id = key;\n\n    carrierData[key].av_weight =\n      carrierData[key].weight / carrierData[key].shipments;\n    carrierData[key].intencity_factor =\n      (carrierData[key].intencity / carrierData[key].shipments)*1000;\n\n  }\n    console.log(carrierData)\n  return carrierData;\n};\n\n// just returning default start and end time\nexport const _defaultTimes = () => {\n    let lastTenWeeks = 70;\n    let lastShipment = \"2020-10-28\";\n    let defaultStart = new Date(lastShipment);\n    defaultStart.setDate(defaultStart.getDate() - lastTenWeeks);\n    defaultStart = defaultStart.toISOString().slice(0, 10);\n    let defaultEnd = new Date();\n    defaultEnd = defaultEnd.toISOString().slice(0, 10);\n    return { defaultStart, defaultEnd };\n}"]}]}